import { formatterStructureOrder } from "../../../../utils/helper/orderHelpers.js";

export const reportPaperColumns = [
  { header: "STT", key: "index" },
  { header: "Mã Đơn Hàng", key: "orderId" },
  { header: "Tên Khách Hàng", key: "customerName" },
  { header: "Ngày YC Giao", key: "dateShipping", style: { numFmt: "dd/mm/yyyy" } },
  { header: "Ngày Sản Xuất", key: "dayStartProduction", style: { numFmt: "dd/mm/yyyy" } },
  { header: "Ngày Báo Cáo", key: "dayReported", style: { numFmt: "dd/mm/yyyy hh:mm" } },
  { header: "Kết Cấu Đặt Hàng", key: "structure" },
  { header: "Sóng", key: "flute" },
  { header: "Dao Xả", key: "daoXa" },
  { header: "Dài", key: "length" },
  { header: "Khổ", key: "size" },
  { header: "Số Con", key: "child" },
  { header: "Khổ Cấp Giấy", key: "khoCapGiay" },
  { header: "SL Đơn Hàng", key: "quantityOrd" },
  { header: "Kế Hoạch Chạy", key: "runningPlanProd" },
  { header: "SL Báo Cáo", key: "qtyReported" },
  { header: "Thiếu/Đủ SL", key: "lackOfQty" },
  { header: "Thời Gian Chạy", key: "timeRunningProd" },
  { header: "HD Đặc Biệt", key: "HD_special" },
  { header: "Doanh thu", key: "totalPrice" },
  { header: "Đáy", key: "bottom" },
  { header: "Sóng E", key: "fluteE" },
  { header: "Sóng B", key: "fluteB" },
  { header: "Sóng C", key: "fluteC" },
  { header: "Dao", key: "knife" },
  { header: "Tổng PL", key: "totalLoss" },
  { header: "PL Báo Cáo", key: "qtyWasteRp" },
  { header: "Ca Sản Xuất", key: "shiftProduct" },
  { header: "Trưởng Máy", key: "shiftManager" },
  { header: "Loại Máy", key: "machine" },
  { header: "Làm Thùng?", key: "hasMadeBox" },
];

export const mapReportPaperRow = (item, index) => {
  const orderCell = item.Planning.Order || {};
  const planningCell = item.Planning || {};

  return {
    index: index + 1,
    orderId: orderCell.orderId,
    customerName: orderCell.Customer.customerName,
    dateShipping: new Date(orderCell.dateRequestShipping),
    dayStartProduction: new Date(planningCell.dayStart),
    dayReported: new Date(item.dayReport),
    structure: formatterStructureOrder(planningCell),
    flute: orderCell.flute,
    daoXa: orderCell.daoXa,
    length: planningCell.lengthPaperPlanning,
    size: planningCell.sizePaperPLaning,
    child: orderCell.numberChild,
    khoCapGiay: planningCell.ghepKho,
    quantityOrd: orderCell.quantityManufacture,
    runningPlanProd: planningCell.runningPlan,
    qtyReported: item.qtyProduced,
    lackOfQty: item.lackOfQty,
    timeRunningProd: planningCell.timeRunning,
    HD_special: orderCell.instructSpecial,
    totalPrice: orderCell.totalPrice,
    bottom: planningCell.bottom,
    fluteE: planningCell.fluteE,
    fluteB: planningCell.fluteB,
    fluteC: planningCell.fluteC,
    knife: planningCell.knife,
    totalLoss: planningCell.totalLoss,
    qtyWasteRp: planningCell.qtyWasteNorm,
    shiftProduct: item.shiftProduction,
    shiftManager: item.shiftManagement,
    machine: planningCell.chooseMachine,
    hasMadeBox: planningCell.hasBox ? "Có" : "",
  };
};
